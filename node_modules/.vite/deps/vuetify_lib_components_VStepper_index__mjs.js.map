{
  "version": 3,
  "sources": ["../../vuetify/src/components/VStepper/VStepper.tsx", "../../vuetify/src/components/VStepper/VStepperActions.tsx", "../../vuetify/src/components/VStepper/VStepperHeader.ts", "../../vuetify/src/components/VStepper/VStepperItem.tsx", "../../vuetify/src/components/VStepper/VStepperWindow.tsx", "../../vuetify/src/components/VStepper/VStepperWindowItem.tsx"],
  "sourcesContent": ["// Styles\nimport './VStepper.sass'\n\n// Components\nimport { makeVStepperActionsProps, VStepperActions } from './VStepperActions'\nimport { VStepperHeader } from './VStepperHeader'\nimport { VStepperItem } from './VStepperItem'\nimport { VStepperWindow } from './VStepperWindow'\nimport { VStepperWindowItem } from './VStepperWindowItem'\nimport { VDivider } from '@/components/VDivider'\nimport { makeVSheetProps, VSheet } from '@/components/VSheet/VSheet'\n\n// Composables\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\n\n// Utilities\nimport { computed, toRefs } from 'vue'\nimport { genericComponent, getPropertyFromItem, only, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { StepperItem, StepperItemSlot } from './VStepperItem'\nimport type { GroupItemProvide } from '@/composables/group'\n\nexport const VStepperSymbol: InjectionKey<GroupItemProvide> = Symbol.for('vuetify:v-stepper')\n\nexport type VStepperSlot = {\n  prev: () => void\n  next: () => void\n}\n\nexport type VStepperSlots = {\n  actions: VStepperSlot\n  default: VStepperSlot\n  header: StepperItem\n  'header-item': StepperItemSlot\n  icon: StepperItemSlot\n  title: StepperItemSlot\n  subtitle: StepperItemSlot\n  item: StepperItem\n  prev: never\n  next: never\n} & {\n  [key: `header-item.${string}`]: StepperItemSlot\n  [key: `item.${string}`]: StepperItem\n}\n\nexport const makeStepperProps = propsFactory({\n  altLabels: Boolean,\n  bgColor: String,\n  editable: Boolean,\n  hideActions: Boolean,\n  items: {\n    type: Array as PropType<readonly StepperItem[]>,\n    default: () => ([]),\n  },\n  itemTitle: {\n    type: String,\n    default: 'title',\n  },\n  itemValue: {\n    type: String,\n    default: 'value',\n  },\n  mobile: Boolean,\n  nonLinear: Boolean,\n  flat: Boolean,\n}, 'Stepper')\n\nexport const makeVStepperProps = propsFactory({\n  ...makeStepperProps(),\n  ...makeGroupProps({\n    mandatory: 'force' as const,\n    selectedClass: 'v-stepper-item--selected',\n  }),\n  ...makeVSheetProps(),\n  ...only(makeVStepperActionsProps(), ['prevText', 'nextText']),\n}, 'VStepper')\n\nexport const VStepper = genericComponent<VStepperSlots>()({\n  name: 'VStepper',\n\n  props: makeVStepperProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const { items: _items, next, prev, selected } = useGroup(props, VStepperSymbol)\n    const { color, editable, prevText, nextText } = toRefs(props)\n\n    const items = computed(() => props.items.map((item, index) => {\n      const title = getPropertyFromItem(item, props.itemTitle, item)\n      const value = getPropertyFromItem(item, props.itemValue, index + 1)\n\n      return {\n        title,\n        value,\n        raw: item,\n      }\n    }))\n    const activeIndex = computed(() => {\n      return _items.value.findIndex(item => selected.value.includes(item.id))\n    })\n    const disabled = computed(() => {\n      if (props.disabled) return props.disabled\n      if (activeIndex.value === 0) return 'prev'\n      if (activeIndex.value === _items.value.length - 1) return 'next'\n\n      return false\n    })\n\n    provideDefaults({\n      VStepperItem: {\n        editable,\n        prevText,\n        nextText,\n      },\n      VStepperActions: {\n        color,\n        disabled,\n        prevText,\n        nextText,\n      },\n    })\n\n    useRender(() => {\n      const sheetProps = VSheet.filterProps(props)\n\n      const hasHeader = !!(slots.header || props.items.length)\n      const hasWindow = props.items.length > 0\n      const hasActions = !props.hideActions && !!(hasWindow || slots.actions)\n\n      return (\n        <VSheet\n          { ...sheetProps }\n          color={ props.bgColor }\n          class={[\n            'v-stepper',\n            {\n              'v-stepper--alt-labels': props.altLabels,\n              'v-stepper--flat': props.flat,\n              'v-stepper--non-linear': props.nonLinear,\n              'v-stepper--mobile': props.mobile,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasHeader && (\n            <VStepperHeader key=\"stepper-header\">\n              { items.value.map(({ raw, ...item }, index) => (\n                <>\n                  { !!index && (<VDivider />) }\n\n                  <VStepperItem\n                    { ...item }\n                    v-slots={{\n                      default: slots[`header-item.${item.value}`] ?? slots.header,\n                      icon: slots.icon,\n                      title: slots.title,\n                      subtitle: slots.subtitle,\n                    }}\n                  />\n                </>\n              ))}\n            </VStepperHeader>\n          )}\n\n          { hasWindow && (\n            <VStepperWindow key=\"stepper-window\">\n              { items.value.map(item => (\n                <VStepperWindowItem\n                  value={ item.value }\n                  v-slots={{\n                    default: () => slots[`item.${item.value}`]?.(item) ?? slots.item?.(item),\n                  }}\n                />\n              ))}\n            </VStepperWindow>\n          )}\n\n          { slots.default?.({ prev, next }) }\n\n          { hasActions && (\n            slots.actions?.({ next, prev }) ?? (\n              <VStepperActions\n                key=\"stepper-actions\"\n                onClick:prev={ prev }\n                onClick:next={ next }\n                v-slots={ slots }\n              />\n            )\n          )}\n        </VSheet>\n      )\n    })\n\n    return {\n      prev,\n      next,\n    }\n  },\n})\n\nexport type VStepper = InstanceType<typeof VStepper>\n", "// Components\nimport { VBtn } from '@/components/VBtn/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider/VDefaultsProvider'\n\n// Composables\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type VStepperActionsSlots = {\n  prev: {\n    props: { onClick: () => void }\n  }\n  next: {\n    props: { onClick: () => void }\n  }\n}\n\nexport const makeVStepperActionsProps = propsFactory({\n  color: String,\n  disabled: {\n    type: [Boolean, String] as PropType<boolean | 'next' | 'prev'>,\n    default: false,\n  },\n  prevText: {\n    type: String,\n    default: '$vuetify.stepper.prev',\n  },\n  nextText: {\n    type: String,\n    default: '$vuetify.stepper.next',\n  },\n}, 'VStepperActions')\n\nexport const VStepperActions = genericComponent<VStepperActionsSlots>()({\n  name: 'VStepperActions',\n\n  props: makeVStepperActionsProps(),\n\n  emits: {\n    'click:prev': () => true,\n    'click:next': () => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { t } = useLocale()\n    function onClickPrev () {\n      emit('click:prev')\n    }\n\n    function onClickNext () {\n      emit('click:next')\n    }\n\n    useRender(() => {\n      const prevSlotProps = {\n        onClick: onClickPrev,\n      }\n      const nextSlotProps = {\n        onClick: onClickNext,\n      }\n\n      return (\n        <div class=\"v-stepper-actions\">\n          <VDefaultsProvider\n            defaults={{\n              VBtn: {\n                disabled: ['prev', true].includes(props.disabled),\n                text: t(props.prevText),\n                variant: 'text',\n              },\n            }}\n          >\n            { slots.prev?.({ props: prevSlotProps }) ?? (\n              <VBtn { ...prevSlotProps } />\n            )}\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VBtn: {\n                color: props.color,\n                disabled: ['next', true].includes(props.disabled),\n                text: t(props.nextText),\n                variant: 'tonal',\n              },\n            }}\n          >\n            { slots.next?.({ props: nextSlotProps }) ?? (\n              <VBtn { ...nextSlotProps } />\n            )}\n          </VDefaultsProvider>\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VStepperActions = InstanceType<typeof VStepperActions>\n", "// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VStepperHeader = createSimpleFunctional('v-stepper-header')\n\nexport type VStepperHeader = InstanceType<typeof VStepperHeader>\n", "// Styles\nimport './VStepperItem.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar/VAvatar'\nimport { VIcon } from '@/components/VIcon/VIcon'\n\n// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { genOverlays } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { VStepperSymbol } from './VStepper'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type StepperItem = string | Record<string, any>\n\nexport type StepperItemSlot = {\n  canEdit: boolean\n  hasError: boolean\n  hasCompleted: boolean\n  title?: string | number\n  subtitle?: string | number\n  step: any\n}\n\nexport type VStepperItemSlots = {\n  default: StepperItemSlot\n  icon: StepperItemSlot\n  title: StepperItemSlot\n  subtitle: StepperItemSlot\n}\n\nexport type ValidationRule = () => string | boolean\n\nexport const makeStepperItemProps = propsFactory({\n  color: String,\n  title: String,\n  subtitle: String,\n  complete: Boolean,\n  completeIcon: {\n    type: String,\n    default: '$complete',\n  },\n  editable: Boolean,\n  editIcon: {\n    type: String,\n    default: '$edit',\n  },\n  error: Boolean,\n  errorIcon: {\n    type: String,\n    default: '$error',\n  },\n  icon: String,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  rules: {\n    type: Array as PropType<readonly ValidationRule[]>,\n    default: () => ([]),\n  },\n}, 'StepperItem')\n\nexport const makeVStepperItemProps = propsFactory({\n  ...makeStepperItemProps(),\n  ...makeGroupItemProps(),\n}, 'VStepperItem')\n\nexport const VStepperItem = genericComponent<VStepperItemSlots>()({\n  name: 'VStepperItem',\n\n  directives: { Ripple },\n\n  props: makeVStepperItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const group = useGroupItem(props, VStepperSymbol, true)\n    const step = computed(() => group?.value.value ?? props.value)\n    const isValid = computed(() => props.rules.every(handler => handler() === true))\n    const isClickable = computed(() => !props.disabled && props.editable)\n    const canEdit = computed(() => !props.disabled && props.editable)\n    const hasError = computed(() => props.error || !isValid.value)\n    const hasCompleted = computed(() => props.complete || (props.rules.length > 0 && isValid.value))\n    const icon = computed(() => {\n      if (hasError.value) return props.errorIcon\n      if (hasCompleted.value) return props.completeIcon\n      if (group.isSelected.value && props.editable) return props.editIcon\n\n      return props.icon\n    })\n    const slotProps = computed(() => ({\n      canEdit: canEdit.value,\n      hasError: hasError.value,\n      hasCompleted: hasCompleted.value,\n      title: props.title,\n      subtitle: props.subtitle,\n      step: step.value,\n      value: props.value,\n    }))\n\n    useRender(() => {\n      const hasColor = (\n        !group ||\n        group.isSelected.value ||\n        hasCompleted.value ||\n        canEdit.value\n      ) && (\n        !hasError.value &&\n        !props.disabled\n      )\n      const hasTitle = !!(props.title != null || slots.title)\n      const hasSubtitle = !!(props.subtitle != null || slots.subtitle)\n\n      function onClick () {\n        group?.toggle()\n      }\n\n      return (\n        <button\n          class={[\n            'v-stepper-item',\n            {\n              'v-stepper-item--complete': hasCompleted.value,\n              'v-stepper-item--disabled': props.disabled,\n              'v-stepper-item--error': hasError.value,\n            },\n            group?.selectedClass.value,\n          ]}\n          disabled={ !props.editable }\n          v-ripple={[\n            props.ripple && props.editable,\n            null,\n            null,\n          ]}\n          onClick={ onClick }\n        >\n          { isClickable.value && genOverlays(true, 'v-stepper-item') }\n\n          <VAvatar\n            key=\"stepper-avatar\"\n            class=\"v-stepper-item__avatar\"\n            color={ hasColor ? props.color : undefined }\n            size={ 24 }\n          >\n            { slots.icon?.(slotProps.value) ?? (\n              icon.value ? (\n                <VIcon icon={ icon.value }></VIcon>\n              ) : step.value\n            )}\n          </VAvatar>\n\n          <div class=\"v-stepper-item__content\">\n            { hasTitle && (\n              <div\n                key=\"title\"\n                class=\"v-stepper-item__title\"\n              >\n                { slots.title?.(slotProps.value) ?? props.title }\n              </div>\n            )}\n\n            { hasSubtitle && (\n              <div\n                key=\"subtitle\"\n                class=\"v-stepper-item__subtitle\"\n              >\n                { slots.subtitle?.(slotProps.value) ?? props.subtitle }\n              </div>\n            )}\n\n            { slots.default?.(slotProps.value) }\n          </div>\n        </button>\n      )\n    })\n    return {}\n  },\n})\n\nexport type VStepperItem = InstanceType<typeof VStepperItem>\n", "// Components\nimport { makeVWindowProps, VWindow } from '@/components/VWindow/VWindow'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VStepperSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-stepper')\n\nexport const makeVStepperWindowProps = propsFactory({\n  ...omit(makeVWindowProps(), ['continuous', 'nextIcon', 'prevIcon', 'showArrows', 'touch', 'mandatory']),\n}, 'VStepperWindow')\n\nexport const VStepperWindow = genericComponent()({\n  name: 'VStepperWindow',\n\n  props: makeVStepperWindowProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const group = inject(VStepperSymbol, null)\n    const _model = useProxiedModel(props, 'modelValue')\n\n    const model = computed({\n      get () {\n        // Always return modelValue if defined\n        // or if not within a VStepper group\n        if (_model.value != null || !group) return _model.value\n\n        // If inside of a VStepper, find the currently selected\n        // item by id. Item value may be assigned by its index\n        return group.items.value.find(item => group.selected.value.includes(item.id))?.value\n      },\n      set (val) {\n        _model.value = val\n      },\n    })\n\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props)\n\n      return (\n        <VWindow\n          _as=\"VStepperWindow\"\n          { ...windowProps }\n          v-model={ model.value }\n          class={[\n            'v-stepper-window',\n            props.class,\n          ]}\n          style={ props.style }\n          mandatory={ false }\n          touch={ false }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VStepperWindow = InstanceType<typeof VStepperWindow>\n", "// Components\nimport { makeVWindowItemProps, VWindowItem } from '@/components/VWindow/VWindowItem'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVStepperWindowItemProps = propsFactory({\n  ...makeVWindowItemProps(),\n}, 'VStepperWindowItem')\n\nexport const VStepperWindowItem = genericComponent()({\n  name: 'VStepperWindowItem',\n\n  props: makeVStepperWindowItemProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const windowItemProps = VWindowItem.filterProps(props)\n\n      return (\n        <VWindowItem\n          _as=\"VStepperWindowItem\"\n          { ...windowItemProps }\n          class={[\n            'v-stepper-window-item',\n            props.class,\n          ]}\n          style={ props.style }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VStepperWindowItem = InstanceType<typeof VStepperWindowItem>\n"],
  "mappings": "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",
  "names": ["makeVStepperActionsProps", "propsFactory", "color", "String", "disabled", "type", "Boolean", "default", "prevText", "nextText", "VStepperActions", "genericComponent", "name", "props", "emits", "click:prev", "click:next", "setup", "_ref", "emit", "slots", "t", "useLocale", "onClickPrev", "onClickNext", "useRender", "prevSlotProps", "onClick", "nextSlotProps", "_createVNode", "VDefaultsProvider", "VBtn", "includes", "text", "variant", "prev", "next", "VStepperHeader", "createSimpleFunctional", "makeStepperItemProps", "propsFactory", "color", "String", "title", "subtitle", "complete", "Boolean", "completeIcon", "type", "default", "editable", "editIcon", "error", "errorIcon", "icon", "ripple", "Object", "rules", "Array", "makeVStepperItemProps", "makeGroupItemProps", "VStepperItem", "genericComponent", "name", "directives", "Ripple", "props", "emits", "val", "setup", "_ref", "slots", "group", "useGroupItem", "VStepperSymbol", "step", "computed", "value", "isValid", "every", "handler", "isClickable", "disabled", "canEdit", "hasError", "hasCompleted", "length", "isSelected", "slotProps", "useRender", "hasColor", "hasTitle", "hasSubtitle", "onClick", "toggle", "_withDirectives", "_createVNode", "selectedClass", "genOverlays", "VAvatar", "undefined", "VIcon", "_resolveDirective", "VStepperSymbol", "Symbol", "for", "makeVStepperWindowProps", "propsFactory", "omit", "makeVWindowProps", "VStepperWindow", "genericComponent", "name", "props", "emits", "v", "setup", "_ref", "slots", "group", "inject", "_model", "useProxiedModel", "model", "computed", "get", "value", "items", "find", "item", "selected", "includes", "id", "set", "val", "useRender", "windowProps", "VWindow", "filterProps", "_createVNode", "_mergeProps", "$event", "class", "style", "makeVStepperWindowItemProps", "propsFactory", "makeVWindowItemProps", "VStepperWindowItem", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "windowItemProps", "VWindowItem", "filterProps", "_createVNode", "_mergeProps", "class", "style", "VStepperSymbol", "Symbol", "for", "makeStepperProps", "propsFactory", "altLabels", "Boolean", "bgColor", "String", "editable", "hideActions", "items", "type", "Array", "default", "itemTitle", "itemValue", "mobile", "nonLinear", "flat", "makeVStepperProps", "makeGroupProps", "mandatory", "selectedClass", "makeVSheetProps", "only", "makeVStepperActionsProps", "VStepper", "genericComponent", "name", "props", "emits", "v", "setup", "_ref", "slots", "_items", "next", "prev", "selected", "useGroup", "color", "prevText", "nextText", "toRefs", "computed", "map", "item", "index", "title", "getPropertyFromItem", "value", "raw", "activeIndex", "findIndex", "includes", "id", "disabled", "length", "provideDefaults", "VStepperItem", "VStepperActions", "useRender", "sheetProps", "VSheet", "filterProps", "hasHeader", "header", "hasWindow", "hasActions", "actions", "_createVNode", "_mergeProps", "class", "style", "VStepperHeader", "_ref2", "_Fragment", "VDivider", "icon", "subtitle", "VStepperWindow", "VStepperWindowItem"]
}
